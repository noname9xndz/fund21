@mixin min-xs {
  @media screen and (min-width: #{breakpoints(xs)}) {
    @content;
  }
}

@mixin min-xxs {
  @media screen and (min-width: #{breakpoints(xxs)}) {
    @content;
  }
}

@mixin min-sm {
  @media (min-width: #{breakpoints(sm)}) {
    @content;
  }
}

@mixin min-md {
  @media (min-width: #{breakpoints(md)}) {
    @content;
  }
}

@mixin min-lg {
  @media screen and (min-width: #{breakpoints(lg)}) {
    @content;
  }
}

@mixin min-xl {
  @media screen and (min-width: #{breakpoints(xl)}) {
    @content;
  }
}

@mixin min-xxl {
  @media screen and (min-width: #{breakpoints(xxl)}) {
    @content;
  }
}

@mixin print {
  @media print {
    @content;
  }
}

@mixin typography($ff, $fw, $fz, $lh) {
  font-family: $ff;
  font-weight: $fw;
  font-size: $fz;
  line-height: $lh;
}

@mixin clearfix() {

  &:before,
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin placeholder() {
  &.placeholder {
    @content;
  }

  &::placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &:hover::after {
    @include min-md {
      transform: scaleX(1);
    }
  }

  &::-ms-input-placeholder {
    @content;
  }
}

@mixin title-with-underline($text-color: #fff, $line-color: #fff) {
  font-family: $font-freight;
  font-weight: 700;
  font-size: 3.2rem;
  color: $text-color;
  position: relative;
  line-height: 1;
  margin-bottom: 2rem;

  &::after {
    content: '';
    position: absolute;
    bottom: -1rem;
    left: 0;
    height: .6rem;
    background: $line-color;
    width: 3.8rem;

    @include min-sm {
      bottom: -2rem;
    }
  }

  &:hover {}

  @include min-sm {
    font-size: 4rem;
  }

  @include min-xl {
    font-size: 6.8rem;

    @media (min-width: 1920px) {
      font-size: 8rem;
    }
  }
}

@mixin link-style($text-color: #fff) {
  font-family: $font-freight;
  font-weight: 500;
  font-size: 1.6rem;
  display: initial;
  color: $text-color;
  position: relative;
  line-height: 1;
  transition: all .5s ease-in-out;

  @include min-md {
    font-size: 2.4rem;
  }

  &::before {
    content: '';
    position: absolute;
    bottom: -0.3rem;
    left: 0;
    height: .1rem;
    background: $text-color;
    width: 0;
    transition: $transition;
  }

  &::after {
    padding-left: .5rem;
    font-family: 'Fontawesome';
    content: '\f061';
  }

  &:hover::before {
    width: 100%;
  }
}

@mixin clickedState {
  &:active {
    opacity: 0.6;
  }
}

@mixin btnStates($btnColor, $btnBorderColor: $btnColor) {
  background-color: $btnColor;
  border: 0.2rem solid $btnBorderColor;

  &:before {
    @if $btnColor==transparent {
      background-color: rgba(255, 255, 255, 0.2);
    }

    @else {
      background-color: darken($btnColor, 10%);
    }
  }

  &:active {
    &:before {
      @if $btnColor==transparent {
        box-shadow: inset 0 0 1rem -0.4rem rgba(0, 0, 0, 0.4);
      }

      @else {
        box-shadow: inset 0 0 1rem -0.4rem darken($btnColor, 40%);
      }
    }
  }
}

@mixin fontSize($mobileFz, $tabletFz, $smallDesktopFz, $desktopFz) {
  font-size: $mobileFz;

  @include min-sm {
    font-size: $tabletFz;
  }

  @include min-lg {
    font-size: $smallDesktopFz;
  }

  @include min-xxl {
    font-size: $desktopFz;
  }
}

@mixin appearance($value) {
  -webkit-appearance: $value;
  -moz-appearance: $value;
  appearance: $value;
}

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin space-between() {
  justify-content: space-between;
  -moz-box-justify-content: space-between;
  -webkit-content: space-between;
}

@mixin clearfix() {

  &:before,
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin scale($value) {
  -webkit-transform: scale($value);
  -moz-transform: scale($value);
  -ms-transform: scale($value);
  -o-transform: scale($value);
  transform: scale($value);
}

@mixin scale2D($value, $value2) {
  -webkit-transform: scale($value, $value2);
  -moz-transform: scale($value, $value2);
  -ms-transform: scale($value, $value2);
  -o-transform: scale($value, $value2);
  transform: scale($value, $value2);
}

@mixin translateX($left) {
  -webkit-transform: translateX($left);
  -moz-transform: translateX($left);
  -ms-transform: translateX($left);
  -o-transform: translateX($left);
  transform: translateX($left);
}

@mixin translateY($top) {
  -webkit-transform: translateY($top);
  -moz-transform: translateY($top);
  -ms-transform: translateY($top);
  -o-transform: translateY($top);
  transform: translateY($top);
}

@mixin translateZ($right) {
  -webkit-transform: translateZ($right);
  -moz-transform: translateZ($right);
  -ms-transform: translateZ($right);
  -o-transform: translateZ($right);
  transform: translateZ($right);
}

@mixin translate2D($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin translate3D($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
  -moz-transform: translate3d($x, $y, $z);
  -ms-transform: translate3d($x, $y, $z);
  -o-transform: translate3d($x, $y, $z);
  transform: translate3d($x, $y, $z);
}

@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin typography($ff, $fw, $fz, $lh) {
  font-family: $ff;
  font-weight: $fw;
  font-size: $fz;
  line-height: $lh;
}

@mixin placeholder() {
  &.placeholder {
    @content;
  }

  &::placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &::-webkit-input-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }

  &::-ms-input-placeholder {
    @content;
  }
}

@mixin border-radius($value) {
  border-radius: $value;
  -moz-border-radius: $value;
  -webkit-border-radius: $value;
  -o-border-radius: $value;
  -ms-border-radius: $value;
}

@mixin background-size($value) {
  background-size: $value;
  -moz-background-size: $value;
  -webkit-background-size: $value;
  -o-background-size: $value;
  -ms-background-size: $value;
}

@mixin transform($value) {
  transform: $value;
  -moz-transform: $value;
  -webkit-transform: $value;
  -o-transform: $value;
  -ms-transform: $value;
}

@mixin box-shadow($value) {
  box-shadow: $value;
  -moz-box-shadow: $value;
  -webkit-box-shadow: $value;
  -o-box-shadow: $value;
  -ms-box-shadow: $value;
}

@mixin filter($value) {
  filter: $value;
  -moz-filter: $value;
  -webkit-filter: $value;
  -o-filter: $value;
  -ms-filter: $value;
}

@mixin transition($value) {
  transition: $value;
  -moz-transition: $value;
  -webkit-transition: $value;
  -o-transition: $value;
  -ms-transition: $value;
}

@mixin transition-delay($value) {
  transition-delay: $value;
  -moz-transition-delay: $value;
  -webkit-transition-delay: $value;
  -o-transition-delay: $value;
  -ms-transition-delay: $value;
}

@mixin animation($value) {
  animation: $value;
  -moz-animation: $value;
  -webkit-animation: $value;
  -o-animation: $value;
  -ms-animation: $value;
}

@mixin animation-delay($value) {
  animation-delay: $value;
  -moz-animation-delay: $value;
  -webkit-animation-delay: $value;
  -o-animation-delay: $value;
  -ms-animation-delay: $value;
}

@mixin transform-origin($value) {
  transform-origin: $value;
  -moz-transform-origin: $value;
  -webkit-transform-origin: $value;
  -o-transform-origin: $value;
  -ms-transform-origin: $value;
}

@mixin appearance($value) {
  appearance: $value !important;
  -moz-appearance: $value !important;
  -webkit-appearance: $value !important;
  -o-appearance: $value !important;
  -ms-appearance: $value !important;
}

@mixin box-shadow-input($value) {
  box-shadow: $value !important;
  -moz-box-shadow: $value !important;
  -webkit-box-shadow: $value !important;
  -o-box-shadow: $value !important;
  -ms-box-shadow: $value !important;
}

@mixin outline($value) {
  outline: $value;
  -moz-outline: $value;
  -webkit-outline: $value;
  -o-outline: $value;
  -ms-outline: $value;
}

@mixin box-sizing($value) {
  box-sizing: $value;
  -moz-box-sizing: $value;
  -webkit-box-sizing: $value;
  -o-box-sizing: $value;
  -ms-box-sizing: $value;
}

//flex
@mixin flex-wrap($value) {
  flex-wrap: $value;
  -moz-flex-wrap: $value;
  -webkit-flex-wrap: $value;
  -o-flex-wrap: $value;
  -ms-flex-wrap: $value;
}

@mixin flex-direction($value) {
  flex-direction: $value;
  -moz-flex-direction: $value;
  -webkit-flex-direction: $value;
  -o-flex-direction: $value;
  -ms-flex-direction: $value;
}

@mixin flex-flow($value) {
  flex-flow: $value;
  -moz-flex-flow: $value;
  -webkit-flex-flow: $value;
  -o-flex-flow: $value;
  -ms-flex-flow: $value;
}

@mixin justify-content($value) {
  justify-content: $value;
  -moz-justify-content: $value;
  -webkit-justify-content: $value;
  -o-justify-content: $value;
  -ms-justify-content: $value;
}

@mixin align-items($value) {
  align-items: $value;
  -moz-align-items: $value;
  -webkit-align-items: $value;
  -o-align-items: $value;
  -ms-align-items: $value;
}

@mixin order($value) {
  order: $value;
  -moz-order: $value;
  -webkit-order: $value;
  -o-order: $value;
  -ms-order: $value;
}

@mixin flex($value) {
  flex: $value;
  -moz-flex: $value;
  -webkit-flex: $value;
  -o-flex: $value;
  -ms-flex: $value;
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content
  }

  &:-moz-placeholder {
    @content
  }

  &::-moz-placeholder {
    @content
  }

  &:-ms-input-placeholder {
    @content
  }
}

@mixin btn($min_width, $backgroud, $color) {
  background-color: $backgroud;
  font-weight: 700;
  font-size: 14px;
  color: $color;
  padding-top: 16px;
  padding-bottom: 16px;
  min-width: $min_width;
  transition: all 0.2s linear;
  border-radius: 3px;
  text-decoration: none;
  line-height: 16px;
  cursor: pointer;
}

@mixin translateIcon() {
  display: inline-block;
  font-family: FontAwesome;
  cursor: pointer;
  position: absolute;
  top: 50%;
  right: 8px;
  @include translateY(-50%);
}

@mixin paginate() {
  .dataTables_paginate {
    &.paging_simple_numbers {
      width: 100%;
      @include flexbox();
      @include justify-content(center);

      span {
        @include flexbox();
      }
    }

    .paginate_button {
      padding: 6px 10px;
      font-size: 13px;
      line-height: 15px;
      color: #000000;
      font-weight: 700;
      border: 1px solid #EAEBEE;
      border-radius: 3px;
      background: #fff;
      cursor: pointer;
      margin: 0 3px;

      &:hover,
      &:active {
        color: #000000 !important;
        box-shadow: none;
      }

      &.next,
      &.previous {
        display: inline-block;
        text-indent: -99999px;
        width: 28px;
        background-repeat: no-repeat;
        background-position: center;
      }

      &.next {
        background-image: url('../../assets/images/icon-next.png');

        &.disabled {
          background-image: url('../../assets/images/icon-next-disable.png');
          cursor: default;

          &:hover {
            background-image: url('../../assets/images/icon-next-disable.png');
            background-color: #fff;
          }
        }
      }

      &.previous {
        background-image: url('../../assets/images/icon-prev.png');

        &.disabled {
          background-image: url('../../assets/images/icon-prev-disable.png');
          cursor: default;
        }
      }

      &.disabled {
        background-color: #fff;
        border: 1px solid #EAEBEE;
      }

      &.current {
        background: #FFF0E4;
        border-radius: 3px;
        border: 1px solid #FFF0E4 !important;
        color: $text-color-orange !important;
        font-weight: 700;
        border: none;

        &:hover {
          color: inherit;
          border: 1px solid #FFF0E4;
          background-color: #FFF0E4;
        }
      }
    }
  }
}

@mixin firefox-only {
  @at-root {
    @-moz-document url-prefix() {
      & {
        @content;
      }
    }
  }
}

@mixin ie-only {

  @media screen and (-ms-high-contrast: active),
  (-ms-high-contrast: none) {
    @content;
  }
}
